@model SoOrder
@{
    var cust = ViewData["Cust"] as List<ComCustomer>;
}

<div>
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-12">
            <div class="input-group mb-3">
                <label class="form-label col-lg-4 col-xs-12">Order No</label>
                <input type="text" class="form-control col-lg-8 col-xs-12" name="OrderNo" placeholder="Auto Generated By System" readonly/>
            </div>
            <div class="input-group mb-3">
                <label class="form-label col-lg-4 col-xs-12">Order Date</label>
                <input type="date" class="form-control col-lg-8 col-xs-12" name="OrderDate" value="@Model.OrderDate" />
            </div>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-12">
            <div class="input-group mb-3">
                <label class="form-label col-lg-4 col-xs-12">Customer</label>
                <select type="text" class="form-control col-lg-8 col-xs-12" name="ComCustomerId" value="@Model.ComCustomerId">
                    <option value="">- choose customer -</option>
                    @foreach(ComCustomer l in cust)
                    {
                        <option value="@l.ComCustomerId">@l.CustomerName</option>
                    }
                </select>
            </div>
            <div class="input-group mb-3">
                <label class="form-label col-lg-4 col-xs-12">Address</label>
                <textarea class="form-control col-lg-8 col-xs-12" name="Address" >@Model.Address</textarea>
            </div>
        </div>
    </div>
    <div>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalItem">
            Add Item
        </button>
        <button class="btn btn-success" id="btnSave">Save</button>
        <table class="table" id="tblItem">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Name</th>
                    <th>Qty</th>
                    <th>Price</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>



<div class="modal fade" id="modalItem" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label for="exampleInputPassword1" class="form-label">Item</label>
                        <input type="text" name="Item" class="form-control" id="Item">
                    </div>
                    <div class="mb-3">
                        <label for="exampleInputPassword1" class="form-label">Qty</label>
                        <input type="number" name="Qty" class="form-control" id="Qty">
                    </div>
                    <div class="mb-3">
                        <label for="exampleInputPassword1" class="form-label">Price</label>
                        <input type="number" name="Price" class="form-control" id="Price">
                    </div>
                    <button type="submit" class="btn btn-primary">Add</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Event handler untuk tombol submit di modal
        $("#modalItem button[type='submit']").on("click", function (e) {
            e.preventDefault(); // Mencegah submit default form

            // Ambil nilai input dari modal
            const itemName = $("#Item").val();
            const itemQty = $("#Qty").val();
            const itemPrice = $("#Price").val();

            // Validasi input
            if (!itemName || !itemQty || !itemPrice) {
                alert("All fields are required!");
                return;
            }

            // Hitung total harga
            const itemTotal = parseFloat(itemQty) * parseFloat(itemPrice);

            // Tambahkan baris baru ke tabel
            const newRow = `
                <tr>
                    <td>${$("#tblItem tbody tr").length + 1}</td>
                    <td>${itemName}</td>
                    <td>${itemQty}</td>
                    <td>${itemPrice}</td>
                    <td>${itemTotal.toFixed(2)}</td>
                </tr>
            `;
            $("#tblItem tbody").append(newRow);

            // Reset input di modal
            $("#Item").val("");
            $("#Qty").val("");
            $("#Price").val("");

            // Tutup modal
            $("#modalItem").modal("hide");
        });

        $("#btnSave").on("click", function () {
            // Ambil data dari form
            let orderNo = $("input[name='OrderNo']").val();
            let orderDate = $("input[name='OrderDate']").val();
            let comCustomerId = $("select[name='ComCustomerId']").val();
            let address = $("textarea[name='Address']").val();

            // Validasi input form
            if (!orderDate || !comCustomerId) {
                alert("Order Date and Customer are required.");
                return;
            }

            // Ambil data item dari tabel
            let items = [];
            $("#tblItem tbody tr").each(function () {
                const itemName = $(this).find("td:nth-child(2)").text();
                const itemQty = $(this).find("td:nth-child(3)").text();
                const itemPrice = $(this).find("td:nth-child(4)").text();
                const itemTotal = $(this).find("td:nth-child(5)").text();

                items.push({
                    Name: itemName,
                    Qty: parseInt(itemQty),
                    Price: parseFloat(itemPrice),
                    Total: parseFloat(itemTotal)
                });
            });

            if (items.length === 0) {
                alert("No items to save!");
                return;
            }

            // Kirim data ke server
            $.ajax({
                url: '/Order/Store',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    OrderNo: orderNo,
                    OrderDate: orderDate,
                    ComCustomerId: comCustomerId,
                    Address: address,
                    Items: items
                }),
                success: function (response) {
                    alert("Order saved successfully!");
                    location.reload(); // Opsional: Reload halaman
                },
                error: function (xhr) {
                    alert("Failed to save order: " + xhr.responseText);
                }
            });
        });
    });
</script>

